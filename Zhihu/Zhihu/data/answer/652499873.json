[
    {
        "answer_id": 3465673308,
        "content": "毫无疑问，全栈型的算法工程师将更为抢手，如果你精通大模型从训练到应用的整个流程，你走到哪里都不怕。但往往人的精力有限，如果从数据、预训练、微调、对齐、推理、应用几个方面来看的话，个人觉得“预训练>数据>应用>对齐>推理>微调”。先说一下各个方向的特点，再说我为啥这么排序吧。纯个人看法，不喜勿喷，但交流欢迎讨论（叠甲叠甲）。数据方面不可否认的一点，现在很多算法工程师，都可以称为数据工程师，在模型调优的绝大时间里，其实都在做数据相关的工作，无论是数据爬取、数据构造，还是数据清洗。“garbage in, garbage out”也是业界公认，数据的质量和数据量决定着模型的效果。这也是为什么都是基于llama的模型，都用lora方法训练，你的模型效果不行的原因，很多时候是数据层面的因素，可能是你的数据并没有很好的激发出模型本身的性能，也可能是给模型灌入的知识质量很差。对于数据方面，已经有很多工作，但哪些有效，哪些适合你自己的场景，对于你自己的场景是否有更好地数据构造、清洗方法，都是算法工程师要考虑的事情。预训练方面大模型时代可以做真正做预训练的企业非常少，做该部分工作的算法工程师也就更少。（当然用20B Token数据，对1B参数模型预训练，咱不算哈）真正对千万级别参数大模型进行几T tokens进行预训练的，对机器要求很高。在多机之间通信过程中，会存在很多问题，训练过程中也会出现很多问题，那么如何解决这些问题，是十分宝贵的经验。由于真正有机会做这些的人少之又少，所有该部分算法工程师很宝贵，毕竟物以稀为贵。如果有了这些人，也许可以少走很多坑，或者说可以更快的训练出大模型。微调方面现在网上开源项目很多，微调基本上已经成为了有手就行。把数据准备好，环境准备好，甚至可以web-ui一键训练。全参、lora、qlora等等方法已经成为了很多项目的标配。可能当你任务有特殊要求时，会简单修改一些dataloader部分，trainer、deepspeed基本就是config参数配置。现在基本上在面试实习生的时候，人手标配，微调过xxxx模型，然后细节一概不知，反正就是跑起来了。对齐方面无论是人类偏好对齐，还是安全性对齐，对于ToC端大模型是必要的，这样可以大幅度提高模型的友好性。对齐过程也是坑比较多，有时模型对着对着，就炸了，开始不说人话了。llama2是根据多种reward模型进行rlhf对齐，现在也有很多简单高效的对齐方法，比如DPO、ORPO等，但实际训练过程中也是一言难尽，需要深入研究。反正我对齐不好，就是怪数据不行。但对于ToB端来说，貌似对齐的意义不大，因为很大程度上，大模型已经被限制了仅在固定场景中使用，或者即使内部出现不安全问题，也不会引发公众影响，ToB更关心的是效果。推理方面大模型参数太大了，对于推理资源的消耗是巨大的，因此加速大模型推理速度、减少大模型推理资源是十分重要的。随着时代的发展，相信以后端侧大模型会越来越多，直接把大模型部署在手机上，有效解决推理资源的问题；并且现在很多模型都支持100K以上的Token，如何提升用户体验、减少自己的硬件资源消耗，是至关重要的。现在推理加速框架也是很多，例如：vllm、fastllm、llamacpp等等，但很多大厂有自己更好的一套，比较轮子不能白造。应用方面大模型最简单的形态是以Chat形式展现，但可以有更好的产品形态，让用户在某些场景可以更好地利用大模型的能力，来解决核心问题。那么就需要将大模型包装成一个好的产品，需要更好地激发大模型能力。其实上面在说各个方面特点的时候，你应该就可能知道我为啥觉得“预训练>数据>应用>对齐>推理>微调”了。因为掌握预训练的人才较少，毕竟物以稀为贵；而数据由是大模型的重点，毕竟有多少数据就有多少智能嘛；对齐主要是很多场景真没必要，毕竟我是做ToB较多，认知也许比较狭隘了；推理其实主要是很多开源框架已经支持的很好了，感觉对于很多厂商来说也许开源就够用了；微调到现在这个阶段，真快成为了有手就行。",
        "voteup_count": 189,
        "updated_time": "2024-04-14 16:49:57",
        "question_id": 652499873,
        "user_id": "4338c2384a026f9c1f430d81771f0e0a"
    },
    {
        "answer_id": 3474537418,
        "content": "大模型出现后，有一些问题，我经常会思考，也经常被问到，那就是：你觉得大模型的出现，算法工程师的「调参」技能会被取代吗？过去这么多年学习的机器学习/深度学习知识派不上用场吗？Copilot等工具出现会让你写代码的技能被取代吗？其实对这些问题，我的看法都是偏否定的。主要是因为，我做了七年的AI项目，深知项目本身最难的部分，从来都不是模型本身。过去几年我在知乎回答算法工程师能力相关问题时，我常常会祭出这张图。图源：《Hidden Technical Debt in Machine Learning Systems》这张图来源于2015的论文《Hidden Technical Debt in Machine Learning Systems》，虽然9年过去了，但这张图依然适用于大模型时代，除了ML Code可以用Prompt Engineer取代。如果说以前的只会写模型算法工程师是「调参侠」，那么现在就变成了「提示词侠」。过去两年我一直是大模型的深度使用者，ChatGPT，Llama，通义千问，kimi，文心一言等等，但你用多了会发现，大模型需要你对问题有清晰定义，才会有满意的答案。但是，根据我交付AI项目的经验，很少团队能在一开始就能把每个方面定义清晰。举个例子，现在你和某某银行达成了一个AI项目合作，利用深度学习/大模型等技术，做一个反洗钱系统。在这个时候，你可能还不知道某某银行的数据质量，有多少历史数据，他们的服务器集群配置如何，他们对Dashboard具体还有要求，更加很难准确估算人力/计算资源/时间成本。这个时候，你得根据公司过去的项目经历或者同行交付同样项目的周期，来给一个大致timeline，然后根据这个timeline，设计项目计划。（其实搞过to B的软件项目就知道，最开始设计100分的项目，最后能完成80分就勉强算交付成功了)回到问题，大模型时代，什么样的算法工程师更吃香？我认为，具有AI项目落地经验的算法工程师更吃香。关于「落地」，我之前写了一篇文章，来讲述算法工程师的落地能力，到现在还没过时，大家可以收藏慢慢阅读。算法工程师的落地能力具体指的是什么？另外，对于「经验」具体指什么，我再补充几点：对业务熟悉。例如我们做风控的，很多知识并不公开，因为如果风控规则公开了，肯定有不法分子想钻空子。做AI风控，需要根据知识来构建特征，这时候，对业务熟悉就非常重要了。和各方沟通，平衡各方关系，解决各方冲突。这更是AI无法取代的事，甚至是很多人都做不好的事。对项目把控。我在以前的一个回答《作为一个算法工程师，开发算法的痛点是什么？》里提到过，其实算法工程师的工作就像戴着镣铐跳舞。你需要考虑项目实际需要，需要从第一性原理出发，有的需求，如果能用简单的模型达到效果，就不一定要用大模型。举个例子，你想从非结构文本中提取关键词，用大模型固然可以，但是否一个简单的NLP分词，甚至一个正则，就能达到相同效果？其实AI项目的落地，本质上是团队对开发周期，计算资源，算法性能的平衡。先写到这里。扩展阅读：在做算法工程师的道路上，你掌握了什么概念或技术使你感觉自我提升突飞猛进？为什么有些算法工程师从来不谈业务，不谈解决问题，不谈价值挖掘，开口闭口就是算法模型，炼丹调参工程化？算法工程师的落地能力具体指的是什么？",
        "voteup_count": 57,
        "updated_time": "2024-04-22 13:34:58",
        "question_id": 652499873,
        "user_id": "cc759c5d7c383aa95e7633f06bcf6d82"
    },
    {
        "answer_id": 3475759758,
        "content": "当了一年多的“大模型算法工程师”，来浅答一下。1. 知道怎么评估自己模型的效果目标不对会走很多弯路。前几年做BERT的时候，基本都是判别任务，分布相对固定，评估集label不难标，也有些可观测的业务指标。而现在都是生成式模型，人力评估成本非常高，很多难的任务可能算法自己肉眼都评不出来，所以有一套稳定的评估方法、接近应用场景分布的评估集非常重要，指标不对，在上面看到的数据、算法提升都是白搭。2. 清楚往哪个方向走天花板更高指标确定后，一方面是摸清楚天花板和现状在哪里，如果本身天花板不高（GPT4都做不好）、或者自己的模型已经表现的很好了，那可能就要再思考下自己是否还继续朝着这个目标走。另一方面是清楚和天花板的差距后，能拆解出各个环节的影响，知道从哪里入手提升更快。比如现阶段是提升数据质量还是提升算法拟合能力，又或者是投更多资源到预训练/续训还是对齐。大模型时代的技术分支非常多，每个分支都能研究到很深，但有的能提升0.1，有的只能提升0.01。能选对优化方向的算法非常强，当然这也需要实验量、阅读量的积累。3. 为方法的scalability着想一些直觉上的点，比如multi-task+不同loss权重、或者加一些先验，肯定是能提效果的，但提升幅度在数据、模型尺寸大幅增加后是否有效、稳定？系统复杂度的增加在大规模训练时反而是一个负担，并没有那么多资源来调超参数、做单变量实验。4. 协调沟通做大模型是一个团队的事情，各个环节往往耦合比较多，也有可能做重复的事情，同时也要和数据、工程协作，这时候算法作为整个项目的核心，沟通和协调能力比以往做业务的要求会更高。业务可以跟着产品走，但大模型怎么训更好、实验的优先级、大家怎么分工，都需要更多的思考和沟通。以上就是在这一年多实践中我认为对算法er很关键的能力，祝大家练出仙丹。",
        "voteup_count": 95,
        "updated_time": "2024-04-23 13:57:24",
        "question_id": 652499873,
        "user_id": "b2ba8fde30546be10c97f8a95aa1596e"
    },
    {
        "answer_id": 3480856735,
        "content": "在大模型时代，算法工程师的吃香程度与他们掌握的技能紧密相关。可以总结出以下几点：编程和软件开发能力：算法工程师需要精通Python或C++编程，并具备扎实的编程技能，特别是在Python等语言上。此外，熟悉至少一种深度学习框架（如TensorFlow/PyTorch）也是必要的。机器学习和深度学习知识：掌握机器学习、深度学习等人工智能算法是基础要求。这包括对模型架构的设计和使用、数据的整理和使用有深刻理解。数学和统计学基础：深度学习算法工程师需要具备扎实的数学基础，包括线性代数、概率论与统计、微积分等。工程实践与部署能力：除了理论知识，算法工程师还需要具备将算法从设计到实现再到上线的全流程工作能力。这包括对应用平台的计算特点、擅长处理的计算流程和应尽量避免的计算模式有充分的了解。跨界合作与解决复杂问题的能力：在多领域交叉中发挥作用，担负着推动人工智能技术前进的重要使命。这意味着算法工程师不仅要在自己的专业领域深耕，还需要有能力与其他领域的专家合作，共同解决复杂的实际问题。持续学习与更新知识的能力：随着人工智能领域的迅猛发展和大规模模型的广泛应用，算法工程师需要不断学习和发展，以适应新的技术和挑战。大模型时代的算法工程师更吃香的是那些具备强大的编程和软件开发能力、深厚的机器学习和深度学习知识、扎实的数学和统计学基础、丰富的工程实践与部署经验、跨界合作与解决复杂问题的能力以及持续学习与更新知识的能力的人才。",
        "voteup_count": 18,
        "updated_time": "2024-04-27 23:04:27",
        "question_id": 652499873,
        "user_id": "671e99a6e908be8e752db32863f47211"
    },
    {
        "answer_id": 3469901311,
        "content": "这个问题需要站在公司的角度来回答。下面是纯个人看法，不喜勿喷。如果我是老板的话，我肯定愿意招那些“复合型”的算法人才，比如既懂算法，又懂工程，还熟悉业务。当然，这样“复合型”的人才不管是不是在大模型时代，他们都会非常吃香。具体来讲，什么叫“复合型”人才？在大模型时代，训练并且应用好一个 LLM 往往需要以下几个步骤：数据收集 ->数据清洗 -> 底座预训练 -> 有监督微调 -> RLHF -> 推理优化 -> 业务应用其实，并不是所有公司都需要自己进行 LLM 的底座预训练（成本太昂贵，有能力做这一步的公司估计不到 5%），这一步完全可以复用已有的开源 LLM （比如 Qwen、LLaMA2 和 Baichuan 等等）。所以，这一部分虽然门槛最高，但是需求相对也少很多，有点像屠龙之术，能施展的地方不多，但是掌握这方面的技术肯定是有价值的（因为我相信你既然能做好 Pretrain，那 SFT 和 RLHF 其实相对容易很多了，很多东西都是相通的），虽然不一定在市场上更吃香。那么，剩下的几个环节，我觉得算法工程师都应该有所了解才行。数据层面：需要具备基本的数据收集能力 --- 数据爬取、数据筛选和数据构造。数据质量和构成决定了 LLM 的上限，算法工程师应该对数据有一定的敏感性，而不要只关注模型和训练层面。SFT：这其实门槛不高的，无论是 LoRA/QLoRA 还是全参数微调和部分参数微调，其实有很多开箱即用的开源库的，多用用就熟练了。RLHF：这个 DeepSpeed Chat 库也已经集成的很好了，也算开箱即用吧。但这部分我个人觉得比 SFT 要求高，需要了解 Reward Model 和一些高效的 alignment 方法，有一些技巧在里面，多读读最新的论文吧。4. 推理优化：需要对模型量化压缩和解码加速方面有所了解，如果要将 LLM 部署到移动端，还需要了解剪枝相关的知识。这方面其实需求量挺大的，也有一定的门槛，比如有些量化方法实现起来需要 cuda 编程等等。有一些开源库比如 vllm 支持的比较好，可以多了解了解。5. 业务应用：有了一个推理效果和速度都还不错的 LLM 之后，就需要推到业务场景中去应用。不同的人用同一个 LLM 可能拿到的业务收益差异很大，这其实有点像 A 和 B 两个人都有一本《孙子兵法》，但是打仗起来 A 就是赢不了 B。这里更多的是需要业务场景和商业化层面的思考，已经脱离技术本身了，更多的是需要经验。",
        "voteup_count": 15,
        "updated_time": "2024-04-18 11:09:15",
        "question_id": 652499873,
        "user_id": "147fc19c3801b056e6437864322c8836"
    },
    {
        "answer_id": 3470840527,
        "content": "大模型时代，算法工程师的发展趋势和技术拓展呈现出令人瞩目的前景。随着人工智能领域的迅猛发展和大规模模型的广泛应用，算法工程师也正处于一个充满机遇和挑战的时代，他们将在多领域交叉中发挥作用，担负着推动人工智能技术前进的重要使命。一、人工智能算法工程师的每个阶段是怎么样的？阶段一：模式识别阶段在深度学习大规模应用前的2000年至2012年期间，被称为模式识别阶段的时期，人工智能领域正处于一个探索和发展的初级阶段。在这个时期，深度学习尚未出现，而对于人工智能的定义也没有达成明确共识。这一阶段着重于研究和应用各种模式识别技术，旨在解决不同专业方向中的特定问题。然而，由于技术水平和数据资源的限制，每个领域的模式识别都存在着显著的差异，例如在文字识别和人脸识别等方面，门槛普遍非常高。在这个早期阶段，模式识别的研究主要集中在传统机器学习方法上，如支持向量机、隐马尔可夫模型和决策树等。虽然这些方法在某些任务上取得了一定的成果，但对于复杂的现实世界问题，其表现往往不尽如人意。这个阶段缺乏深度学习这样能够端到端人工智能算法模型，导致了在大规模应用和跨领域的挑战中遇到了瓶颈。（1）传统机器学习–支持向量机在机器学习中，向量机（SVM，Support Vector Machine）通常指的是一种用于分类和回归问题的监督学习算法。SVM 是由Vladimir Vapnik和Alexey Chervonenkis于1970年代末至1990年代末开发的。它在处理高维数据和复杂特征之间表现出色，并在许多实际问题中取得了显著的成功。SVM 的基本原理是在高维空间中找到一个最优的超平面（或者说决策边界），将不同类别的样本点分隔开。在二分类问题中，这个超平面的目标是使两个类别中距离超平面最近的样本点之间的间隔最大化。这些距离最近的样本点被称为支持向量（Support Vectors），因此 SVM 的名称就是由此而来。（2）传统机器学习–隐马尔可夫模型隐马尔可夫模型（Hidden Markov Model，HMM）是一种用于建模序列数据的概率图模型。HMM主要用于描述随时间变化的状态序列和与之相对应的观测序列之间的概率关系。在HMM中，状态是不可观测的（隐藏的），而观测序列是可见的。模型假设存在一个隐藏的马尔可夫过程，该过程在一系列离散的时间步骤中演化，并根据状态生成对应的观测。（3）新的开始！–AlexNet2006年，一项重要的研究为深度学习的发展打开了新的大门。Geoffrey Hinton等人提出了深度置信网络（DBN）的概念，这是一种多层神经网络结构，能够自动从数据中提取特征。DBN的提出对于解决传统机器学习方法在处理复杂数据时的局限性具有重要意义。它为构建深度神经网络提供了理论支持和方法指导，为第二阶段深度学习的出现与兴起奠定了基础。随后，在2012年，Hinton的学生Alex Krizhevsky等人在ImageNet图像分类竞赛中的惊人表现彻底改变了人工智能中算法模型的格局。Alex通过利用图形处理单元（GPU）等硬件加速技术，他们构建了一个深度卷积神经网络（CNN-AlexNet），在国际性人工智能大赛ImageNet比赛中打败了一众优秀知名的对手并最终斩获了冠军。AlexNet是由Alex Krizhevsky 提出的首个应用于图像分类的深层卷积神经网络，该网络在2012年ILSVRC（ImageNet Large Scale Visual Recognition Competition）图像分类竞赛中以15.3%的top-5测试错误率赢得第一名。也是在那年之后，越来越多的神经网络模型被提出，比如优秀的VGG 、GoogLeNet。AlexNet这一突破性成果引起了全球科学界和产业界对深度学习的广泛关注。CNN的出现不仅使得计算机能够高效处理图像识别任务，还显示出深度学习在处理复杂数据和实现人工智能的巨大潜力。这次胜利标志着深度学习时代的开启。从此以后，深度学习成为人工智能领域的热点话题，吸引了大量研究者的关注和投入。深度学习的崛起不仅得益于算法和模型的改进，还依赖于计算硬件和海量数据的支持。随着计算机硬件性能的不断提升，特别是GPU等并行计算设备的发展，深度学习模型的训练速度得到了显著提升。此外，互联网和物联网的普及使得数据爆炸式增长，为深度学习提供了大量的训练数据，有助于模型的学习和泛化能力的提升。阶段二：深度学习炼丹阶段通过阶段一的积累与一些比赛中深度学习大放异彩，导致在2012年至2022年这个时期，深度学习的大规模应用掀起了一股浪潮，使得人工智能领域的算法研究门槛有了显著的降低。这个时代被形象地称为“深度学习炼丹时期”，因为深度学习模型的广泛应用就像炼丹一样，在不断探索和优化中开创了人工智能的新纪元。随着开源数据集和算法的普及，更多的人可以参与到人工智能的研究中，而关注点也逐渐从模型的开发转向了如何更好地调参和充分利用算法的应用上。深度学习与阶段一的传统机器学习模式识别阶段如下的一些差异性：特征表示的学习处理大规模数据处理复杂问题端到端学习（1）深度学习模型–卷积神经网络CNN卷积神经网络是一种用于图像处理和计算机视觉任务的深度学习模型。它通过多层卷积层和池化层来提取图像的局部特征，并通过全连接层和Softmax层进行分类。CNN在图像分类、目标检测、图像分割等领域取得了显著的成就，例如AlexNet、VGG、ResNet和Inception等模型。（2）深度学习模型–循环神经网络RNN循环神经网络是一种用于处理序列数据的深度学习模型。它在网络中引入循环连接，使得网络具有记忆性，可以处理变长序列数据。RNN在自然语言处理（NLP）和语音识别等任务中表现出色，例如用于机器翻译的Seq2Seq模型和用于文本生成的LSTM（Long Short-Term Memory）模型。阶段三：大模型时代从2022年开始，人工智能进入了一个全新的阶段，ChatGPT这样的大模型的出现彻底改变了人工智能算法的格局。这个时期可以被称为“人工智能大迸发时代”。在这个时代，各行各业开始迅速拥抱人工智能技术，算力和模型的不断提升为人工智能的应用带来了前所未有的机遇。（1）GPT-4多模态模型在去年ChatGPT元年起，微软在多模态模型领域持续发力，2月28日发表论文推出了全能型人工智能模型——Kosmos-1，和局限于纯文本内容（LLM）的ChatGPT相比，Kosmos-1主干基于Transformer的因果语言模型，属于多模态大型语言模型（MLLM），除了自然语言任务，能同时理解文字与图像内容，未来会整合更多的输入模式，如音频、视频。（2）多元化应用落地今年3月微软开源的了ChatGPT AI交互应用Visual ChatGPT，通过调用ChatGPT以及一系列视觉基础模型，实现了聊天过程中发送和接收图像，以及动态对图像进行处理，在ChatGPT的基础上拥有了 VQA 视觉问答 和AI作画的能力。Visual ChatGPT发布后短短一天，在Github就达到了4K+星。三个不同阶段的工程师们差异点与共性就上面三个阶段来说差异性如下：• 在第一阶段，由于深度学习尚未普及，计算资源相对有限，算法工程师们训练大规模模型非常困难。算法工程师可能主要侧重于传统机器学习方法，如支持向量机、决策树等。技术背景相对较为传统。• 到了第二阶段，随着深度学习的兴起，开源数据集和开源算法的普及使得算法工程师可以更轻松地获取数据和算法，并有更多机会进行实验和研究。算法工程师开始掌握深度学习技术，对神经网络和大模型的搭建和调参有更深入的了解。• 在第三阶段，由于算力和模型的大迸发，云计算和分布式计算技术的普及为算法工程师提供了强大的支持。随着ChatGPT等大模型的出现，算法工程师需要具备更高级的自然语言处理技术和对大规模模型的训练和部署有更深刻的理解。相应的，算法工程师们不变的共性我觉得是算法工程能力与持续学习能力，在三个阶段中，算法工程师们都需要保持持续学习的态度，算法工程师最必备的创新精神和解决问题的能力都是推动人工智能技术发展的关键。人工智能领域中的优秀知名企业合合信息在其发展历程中也经历了上述三个阶段，这些阶段是其不断成长和壮大的过程。首先是垂直领域的研究阶段，这时企业需要专注于自身所处领域的提升与深入研究。在早期，合合信息专注于特定领域的解决方案，如图像处理与文字识别处理。通过集中资源和专业知识，公司积累了在特定领域的优势，为行业的发展做出了贡献。随着神经网络与深度学习的出现，合合信息也率先对数据和算法展开持续性、深入性的理解与研究。这一时期，公司加大了对研究团队的投入，开展更深入的学术研究，探索更加复杂的算法和模型。对数据的收集、处理和标注变得至关重要，而深度学习等新兴算法的引入也帮助合合信息在行业市场领域上取得了重要突破。大规模模型的出现使得算法工程师需要关注更高效的训练和推理策略，而丰富的数据源也为模型的泛化性能和稳定性提供了支撑。在这个阶段，也十分重视对算法工程师和工程团队的培养，着力于技术落地和实际应用。当下除了算法工程师，还能从事哪些相关工作？在大模型时代下，算法专业的学生们确实会面临一些焦虑，担心只有成为算法工程师这一条路，而且在大模型如此强大的情况下，是否能在算法领域找到自己的价值。合合信息针对学生们普遍性的焦虑给出了如下建设性的回答：若我们从更宽的视角来看待算法的应用，就会发现，我们可以在算法周边开展的工作实际上非常广泛，能够拓宽我们的职业边界。在大模型时代，如何将技术突破产业化成为一个重要的问题。我们可以从以下几个方面来优化和拓展算法专业学生的职业选择：首先，大模型的出现带来了对算法模型的理解和调参技巧的需求，提示工程师成为一个炙手可热的职业。在美国，已经有招聘提示工程师。提示工程师必须对大模型机理有深刻的理解，这样才能发挥出对应的价值。如下图中近期大火的AI人工智能工程师。大模型时代下的产品经理也成为非常重要的角色。产品经理需要理解大模型算法原理，基于大模型从用户和市场的角度设计满足需求的产品。当前时代的一个产品设计范式的变化是将复杂的流程简化为只有一个对话框，这需要产品经理对大模型技术的了解和应用。同时，在大模型时代，售前和市场团队负责解释和宣传算法产品，这样才能更好地向客户解释产品的功能和优势，扩大产品的影响力。数据工程师在收集和处理数据方面也扮演着重要角色，保证模型训练和优化的顺利进行。除了以上几个例子，大模型的广泛应用还带来了诸如模型监测与解释专家、模型安全专家、模型可解释性研究者等新的职业机会。二、大模型时代下，算法工程师及转型需要具备什么能力？大模型时代下优秀的算法工程师应该具备的优秀特质我认为，算法工程师应当具备如下几个主要的优秀特质！~对算法理解的能力：算法工程师需要深刻理解不同类型的算法，包括传统机器学习算法和深度学习算法，了解其原理和适用场景。对于大模型，必须掌握复杂的神经网络结构、激活函数、损失函数等，以及参数调优和优化方法。只有深刻理解算法的本质，才能在实际应用中灵活选择和调整算法，使其发挥最佳性能。对数据理解的能力：在大模型时代，数据是算法的基石。算法工程师需要具备对数据的深刻理解和处理能力。这包括对数据的质量、规模、特征的认知，能够进行数据预处理、特征工程等，以提升模型性能和泛化能力。同时，对于大规模数据的处理，算法工程师需要掌握分布式计算和存储技术，以高效处理海量数据。算法工程能力：算法工程师需要具备高效的算法实现和工程化能力。这包括熟悉常用的深度学习框架和库，能够灵活搭建、训练和优化大模型。同时，要熟悉分布式计算环境和GPU加速等技术，以提高模型训练和推理的效率。此外，算法工程师还需掌握模型监测与解释、模型可解释性等技术，确保模型的可靠性和可解释性。转型时怎么进行已有算法知识能力迁移？首先关于这个问题，在大模型时代下，已有的算法知识和能力是非常宝贵的资源。除了在纯粹的算法工程师角色中发挥作用，这些知识和能力还可以通过迁移技术理解和解释能力在多个领域得到应用。在大模型产品设计中，深入理解并清晰解释算法工作原理和应用是确保产品成功的前提。售前和市场推广过程中，对算法进行解释能够向客户展示产品的价值和优势，提高产品的认可度。其次数据在大模型时代的地位越发重要，迁移数据驱动决策能力也成为一项关键技能。算法工程师对数据的敏感性和驱动决策的思维方式可以迁移到产品经理、运营等多个角色中。在这些职能中，数据的感知帮助更好地理解用户需求，优化产品性能，并制定有效的市场策略。三、大模型时代下，算法及相关工作者提升与拓展算法工程师转型需要学习哪些？在大模型时代下，算法工程师转型所需整合和学习的内容与专业主要取决于他们的目标岗位。首先，他们应该全面融入大模型技术，真正将其应用于学习和工作中。其次，转型的目标岗位将决定需要掌握的岗位技能：产品相关能力：对于转型为产品经理，理解产品的整个生命周期至关重要。这包括市场研究、需求收集、产品设计、项目管理以及产品推广等。具备商业意识，了解用户需求，掌握产品设计和管理的基本方法是必备技能。技术支持和市场营销：如果转型为售前工程师或市场营销角色，需要学习客户服务技巧，了解市场营销策略，掌握公众演讲和客户服务技能。数据科学：计划转型为数据工程师的人可能需要加强对统计学、预测模型、机器学习等方面的学习，并熟悉如何使用相关的工具和平台进行数据分析。应届生加入，未来市场竞争下有什么优势？首先，当前的算法人员稳定性非常高，这主要有两点原因：首先，每个人有足够的机会去发挥自己的能力，在某个领域他就是专家，我相信算法人才心中是有梦的，而梦需要土壤去发芽。公司追求先进技术，纯粹的技术基因让这个土壤非常肥沃。二是因为成长起来后离开的算法人员在社会上是被认可的，甚至是被抢的。其次，大家可以认真思考一个问题，个人如何保持在算法技术上的领先性和竞争力？互联网时代，信息很多很杂。如果把这些信息比做一阵风，其中的职场人可以是蝴蝶也可以是纸片，他们的区别是：蝴蝶可以顺着大风越飞越远，但是也有能力微微抵抗风向，朝自己的方向飞。而纸片只有一条路走，顺风前进。",
        "voteup_count": 8,
        "updated_time": "2024-04-18 23:51:37",
        "question_id": 652499873,
        "user_id": "3c636da90aa2d89f38d83a7e4a41e904"
    },
    {
        "answer_id": 3469952977,
        "content": "在公司，更关注解决业务的能力，而不是刷论文的数量所以说，包装故事那一套就别拿出来了大家更关注什么呢？大部分来说是 数据为中心的优化。其他的花里胡哨的，最多是个点缀。数据为中心的优化，可以看看下面的综述https://arxiv.org/abs/2303.10158 大体来说，主要就是以上的方向。训练数据开发：训练数据开发的目标是收集和产生丰富、高质量的训练数据支持机器学习模型的训练。 它包含五个子目标，包括 1）用于收集原始训练数据的数据收集，2）数据标签用于添加信息标签，3）用于清理和转换的数据准备数据，4) 数据缩减，以减少数据大小并可能提高性能，以及 5）数据增强，无需收集更多数据即可增强数据多样性。推理数据开发：目标是创建新颖的评估集，可以提供对模型更精细的见解或触发模型的特定功能具有工程数据输入。 这项工作有三个子目标：1）分布内评估和 2）分布外评估旨在生成遵循或分别与训练数据分布不同，而 3）提示工程调整语言模型中的提示以获得所需的预测。 推理数据中的任务开发相对开放，因为它们通常旨在评估或解锁模型的各种功能。数据维护：在实际应用中，数据不是一次性创建的，而是需要持续维护。 数据维护的目的是保证质量动态环境中数据的可靠性。 它涉及三个基本的子目标：1)数据理解，其目标是提供复杂的可视化和评估数据，使人类能够获得有价值的见解，2）数据质量保证，这发展用于监控和修复数据的定量测量和质量改进策略，3）数据存储和检索，旨在设计有效的算法来提供数据需要通过正确分配资源和有效处理查询。 数据维护在以数据为中心的人工智能框架中发挥基础和支持作用，确保训练和推理数据准确可靠。程序自动化：使用程序自动处理数据。 这程序通常是根据一些启发法和统计信息来设计的。基于学习的自动化：学习优化的自动化策略，例如最小化目标函数。 这个级别的方法通常更加灵活和适应性强但需要额外的学习费用。流程自动化：跨多个任务集成和调整一系列策略，这可以帮助确定全球最佳策略。 然而，调整可能会导致显着更多成本。",
        "voteup_count": 7,
        "updated_time": "2024-04-18 10:04:29",
        "question_id": 652499873,
        "user_id": "e08e6e8addfe6427438632327e7066a4"
    },
    {
        "answer_id": 3475185392,
        "content": "和过去一样，能解决问题的算法工程师最吃香。区别在于大模型时代出现的新技术（工具），这就是新的技能点。剖析问题讨论这个问题核心是想要给算法工程师找到核心竞争力，从而在这个方向进行加强。这个问题我们需要拆解来看，一个是时代的限定，一个则是算法工程师的限定。抛开现象看本质，要看大模型给算法工程师带来了什么：1. 算法工程师也是人，那么大模型给所有的人（脱离属性）带来了什么？从对话产品看，是一个很牛的对话（信息获取）工具，是一个可以聊天疏解心情的应用2. 算法工程师同时也可以是其他非算法工程师身份，那么大模型可以用来做什么？各种文案生成，各种文案理解，各种阅读辅助工具等，”超级个体“，这就是当前各路神仙在开发的使用方式。3. 算法工程师本身的职业有什么便利？可以加快编程，可以加快对新知识的follow，可以提升个人的生产效率（如果我有闪电侠的速度，那么我去送外卖岂不是无敌？），也可以有最新的技术应用来解决已知的问题，也可以有新的问题来解决。外卖能手！图片来自于网络，侵删对于前两者就不再本话题下讨论，核心讨论一下第三点，我们分成两个方面：解决问题的能力和解决问题的技能。解决问题的能力优秀的算法工程师是解决问题的专家，他们不仅需要具备扎实的算法基础，而且要紧跟算法的最新进展，保持敏锐的算法洞察力。同时，他们还要有工程能力，能够将算法应用到实际项目中，解决实际问题。此外，对业务的深刻理解和应用能力也是必不可少的，这决定了算法工程师的水平和发展潜力。他们还需要具备良好的产品意识和业务主人翁精神，确保技术成果能够转化为实际的业务价值。最后，优秀的算法工程师还要有团队意识，能够为团队争取利益，推动团队整体发展。=算法建模而这些能力，当大模型出现后会变得更关键，特别是算法建模能力。算法能力一般指问题建模/数据/模型等方向，我们实际工作中大多数遇到的问题建模都比较成熟，可以找到参考，但是大模型可能会让我们有新的建模诉求，这就对个人的抽象建模能力提出了更高的要求。另外一点则是大模型出现后将大模型的应用放开给非算法工程师，使得其他分工的工程师甚至非技术序列的同学也可以利用大模型做很多事情，这个时候算法工程师的“工程能力”，“业务理解”就显得尤为重要。建模->新问题这里单独列一下，只是为了说明建模的重要性。同时要关注的一点是，改变了建模方式就意味着可能会出现新的问题，而这些问题也是需要解决的，这可能就会催生新的机会。详细分享见：叶兀：对于算法工程师职业生涯规划的考虑解决问题的技能大模型作为一个新的技术（老技术的新突破），首先在文本生成和对话上做出了突破，然后很快就会进入到其他的数字化领域，接着就会影响其他的非数字化领域。掌握好这门技术也是一个很关键的能力，这部分能力分两部分，一个是怎么创造出一个好的大模型，一个则是怎么用好这个大模型【严格意义分两部分，一方面是深入了解并基于现有技术延伸应用去改进其他技术领域或者攻克其他技术领域的问题，另一方面则是利用大模型来解决业务（上的技术问题）问题】NLP大模型【创造】任何一个技术刚出现的时候一定是首先应用在其直接解决的问题上，所以我们看到了ChatGPT以及现在一系列出现的文心一言、Kimi等产品。但很快，人们发现“对话”这颗明珠相比过去的巨大突破并不能给“产品”或者“商业”维度带来影响。“人工智能皇冠上的明珠”并不能照亮商业的路。很快，人们开始将新的技术应用来解决过去已经有的NLP曾经解决过的问题，将其作为NLP的一次技术迭代，典型的有营销文本生产等领域。（这个就烂大街了，很多公司都有这个能力）这里出现的技术：LLM（数据处理、预训练、微调、对齐（RLHF等）、模型训练Infra、模型推理Infra）及其直观应用（文案生成，对话，prompt技巧），同时还有伴随着的应用侧改造（大模型的推理速度问题，导致应用侧的一些既有架构可能会带来改变）多模态大模型【创造】真正意思的AIGC其实是在这里的，之前MidJourney火起来之后，CV其实一直被人所关注，但纯工具属性并没有带来出圈。BUT->NLP火起来了，做CV/视频的同学坐不住了，妙鸭相机开路，Sora彻底引爆了多模态生成，NLP和CV逐步走向大一统，这个时候几乎没有人会继续坚持单一模态的技术路线。那么基于LLM的各种技术（点）应用在了多模态的领域，Open-Sora出现，后续还会有越来越多的东西出现。这里出现的技术：和上面LLM大部分类似的技术点（具体细节不同），再有就是图片、视频的相关技术点了，SD、Sora之类LLM4Rec&anything【他山之石，可以攻玉】还记得之前的说法：everything can be a vector。大模型出现之后，我们对他的应用第一直觉就是当成embedding使用，但也有人在不断探索其新的用法。生成式推荐是一个听起来很fancy的东西，到底是否work也还需要探索。这还仅仅只是在算法领域的应用突破：https://github.com/facebookresearch/generative-recommenders/tree/main Meta最新的探索，可以了解一下。具体我们到底还有哪些问题可以被用来解决，还有哪些问题可能要修改其建模方式来获取更好的技术表现，还有待探索应用【探索】应用有两个维度，互联网人可能还是对商业化和赚钱感兴趣，可以见：叶兀：最务实的ChatGPT的商业前景与能力分析另外一个不可以忽视的领域是，AI4Science。这是非常非常关键的一个方向。对于其他专业的人来说，计算机的门槛一直是一个问题，但当前大模型的出现在交互上做了大的变革，可以让所有专业的人更加有力的利用好大模型这个东西，无论是陶哲轩，还是我们身边的同学都有可能利用这些东西直接或者间接的加速自己的科研，从而带来更好的突破。我身边就有医学的同学，这个如虎添翼。特别的，我想要说的是，在应用上，第一个维度是行业+AI，第二个维度则是Science+AI，主体在前。小结本质上，大模型本身是一门技术，掌握它一定会带来新技术的follow收益；但同时它也是一个工具，掌握怎么使用也是很关键的事情，要看你的背景以及你的发展方向，不能一概而论。算法工程师火了那么久，现在不仅有搜广推/cv/nlp，还有因果推断等方向，有共通性但每个方向都有自己的专长。更详细的技术点可以见：叶兀：手把手复现一个ChatGPT拓宽一下世界算法工程师是我们创造的一个职位，没有人限定你不可以同时是前后端，同时是产品运营，超级个体的时代，要不要拓展一下自己的视野，看看最新的机会？跃跃欲试！",
        "voteup_count": 3,
        "updated_time": "2024-04-23 00:31:45",
        "question_id": 652499873,
        "user_id": "c6d70275da4e1c4bb35567727908d2c6"
    },
    {
        "answer_id": 3483271700,
        "content": "中国技术人员最自嗨你会发现很多人挂着架构师，科学家的头衔。例如本问题，算法工程师，我一听就想笑，就是清华北大的也紧紧能把外国开源模型改几个参数而已。根部达不到研发模型的能力。看一个人是不是达到架构师，水平，其实很简单，就看他住在哪里，开什么车。我把深圳架构师，算法工程师都圈出来了那些腾讯，字节，华为的技术人员都住这里。",
        "voteup_count": 1,
        "updated_time": "2024-04-30 07:06:29",
        "question_id": 652499873,
        "user_id": "77c0b91b7513673b0abe24add39c426a"
    },
    {
        "answer_id": 3482829414,
        "content": "在当今大模型时代，算法工程师的发展趋势和技术拓展呈现出令人瞩目的前景。同时随着人工智能领域的迅猛发展和大规模模型的广泛应用，算法工程师也正处于一个充满机遇和挑战的时代，他们将在多领域交叉中发挥作用，担负着推动人工智能技术前进的重要使命。那么在下面的博客中，洲洲将结合合合信息一些直播内容与核心企业思想探讨几个关键点，窥探算法工程师在大模型时代的未来走向。一、人工智能算法工程师的每个阶段是怎么样的？阶段一：模式识别阶段在深度学习大规模应用前的2000年至2012年期间，被称为模式识别阶段的时期，人工智能领域正处于一个探索和发展的初级阶段。在这个时期，深度学习尚未出现，而对于人工智能的定义也没有达成明确共识。这一阶段着重于研究和应用各种模式识别技术，旨在解决不同专业方向中的特定问题。然而，由于技术水平和数据资源的限制，每个领域的模式识别都存在着显著的差异，例如在文字识别和人脸识别等方面，门槛普遍非常高。在这个早期阶段，模式识别的研究主要集中在传统机器学习方法上，如支持向量机、隐马尔可夫模型和决策树等。虽然这些方法在某些任务上取得了一定的成果，但对于复杂的现实世界问题，其表现往往不尽如人意。这个阶段缺乏深度学习这样能够端到端人工智能算法模型，导致了在大规模应用和跨领域的挑战中遇到了瓶颈。（1）传统机器学习--支持向量机在机器学习中，向量机（SVM，Support Vector Machine）通常指的是一种用于分类和回归问题的监督学习算法。SVM 是由Vladimir Vapnik和Alexey Chervonenkis于1970年代末至1990年代末开发的。它在处理高维数据和复杂特征之间表现出色，并在许多实际问题中取得了显著的成功。SVM 的基本原理是在高维空间中找到一个最优的超平面（或者说决策边界），将不同类别的样本点分隔开。在二分类问题中，这个超平面的目标是使两个类别中距离超平面最近的样本点之间的间隔最大化。这些距离最近的样本点被称为支持向量（Support Vectors），因此 SVM 的名称就是由此而来。（2）传统机器学习--隐马尔可夫模型隐马尔可夫模型（Hidden Markov Model，HMM）是一种用于建模序列数据的概率图模型。HMM主要用于描述随时间变化的状态序列和与之相对应的观测序列之间的概率关系。在HMM中，状态是不可观测的（隐藏的），而观测序列是可见的。模型假设存在一个隐藏的马尔可夫过程，该过程在一系列离散的时间步骤中演化，并根据状态生成对应的观测。（3）新的开始！--AlexNet2006年，一项重要的研究为深度学习的发展打开了新的大门。Geoffrey Hinton等人提出了深度置信网络（DBN）的概念，这是一种多层神经网络结构，能够自动从数据中提取特征。DBN的提出对于解决传统机器学习方法在处理复杂数据时的局限性具有重要意义。它为构建深度神经网络提供了理论支持和方法指导，为第二阶段深度学习的出现与兴起奠定了基础。随后，在2012年，Hinton的学生Alex Krizhevsky等人在ImageNet图像分类竞赛中的惊人表现彻底改变了人工智能中算法模型的格局。Alex通过利用图形处理单元（GPU）等硬件加速技术，他们构建了一个深度卷积神经网络（CNN-AlexNet），在国际性人工智能大赛ImageNet比赛中打败了一众优秀知名的对手并最终斩获了冠军。AlexNet是由Alex Krizhevsky 提出的首个应用于图像分类的深层卷积神经网络，该网络在2012年ILSVRC（ImageNet Large Scale Visual Recognition Competition）图像分类竞赛中以15.3%的top-5测试错误率赢得第一名。也是在那年之后，越来越多的神经网络模型被提出，比如优秀的VGG 、GoogLeNet。 AlexNet这一突破性成果引起了全球科学界和产业界对深度学习的广泛关注。CNN的出现不仅使得计算机能够高效处理图像识别任务，还显示出深度学习在处理复杂数据和实现人工智能的巨大潜力。这次胜利标志着深度学习时代的开启。从此以后，深度学习成为人工智能领域的热点话题，吸引了大量研究者的关注和投入。深度学习的崛起不仅得益于算法和模型的改进，还依赖于计算硬件和海量数据的支持。随着计算机硬件性能的不断提升，特别是GPU等并行计算设备的发展，深度学习模型的训练速度得到了显著提升。此外，互联网和物联网的普及使得数据爆炸式增长，为深度学习提供了大量的训练数据，有助于模型的学习和泛化能力的提升。阶段二：深度学习炼丹阶段通过阶段一的积累与一些比赛中深度学习大放异彩，导致在2012年至2022年这个时期，深度学习的大规模应用掀起了一股浪潮，使得人工智能领域的算法研究门槛有了显著的降低。这个时代被形象地称为“深度学习炼丹时期”，因为深度学习模型的广泛应用就像炼丹一样，在不断探索和优化中开创了人工智能的新纪元。随着开源数据集和算法的普及，更多的人可以参与到人工智能的研究中，而关注点也逐渐从模型的开发转向了如何更好地调参和充分利用算法的应用上。深度学习与阶段一的传统机器学习模式识别阶段如下的一些差异性：1.特征表示的学习2.处理大规模数据3.处理复杂问题4.端到端学习（1）深度学习模型--卷积神经网络CNN卷积神经网络是一种用于图像处理和计算机视觉任务的深度学习模型。它通过多层卷积层和池化层来提取图像的局部特征，并通过全连接层和Softmax层进行分类。CNN在图像分类、目标检测、图像分割等领域取得了显著的成就，例如AlexNet、VGG、ResNet和Inception等模型。（2）深度学习模型--循环神经网络RNN循环神经网络是一种用于处理序列数据的深度学习模型。它在网络中引入循环连接，使得网络具有记忆性，可以处理变长序列数据。RNN在自然语言处理（NLP）和语音识别等任务中表现出色，例如用于机器翻译的Seq2Seq模型和用于文本生成的LSTM（Long Short-Term Memory）模型。阶段三：大模型时代从2022年开始，人工智能进入了一个全新的阶段，ChatGPT这样的大模型的出现彻底改变了人工智能算法的格局。这个时期可以被称为“人工智能大迸发时代”。在这个时代，各行各业开始迅速拥抱人工智能技术，算力和模型的不断提升为人工智能的应用带来了前所未有的机遇。（1）GPT-4多模态模型在今年ChatGPT元年起，微软在多模态模型领域持续发力，2月28日发表论文推出了全能型人工智能模型——Kosmos-1，和局限于纯文本内容（LLM）的ChatGPT相比，Kosmos-1主干基于Transformer的因果语言模型，属于多模态大型语言模型（MLLM），除了自然语言任务，能同时理解文字与图像内容，未来会整合更多的输入模式，如音频、视频。（2）多元化应用落地今年3月微软开源的了ChatGPT AI交互应用Visual ChatGPT，通过调用ChatGPT以及一系列视觉基础模型，实现了聊天过程中发送和接收图像，以及动态对图像进行处理，在ChatGPT的基础上拥有了 VQA 视觉问答 和AI作画的能力。Visual ChatGPT发布后短短一天，在Github就达到了4K+星。三个不同阶段的工程师们差异点与共性就上面三个阶段来说差异性如下：• 在第一阶段，由于深度学习尚未普及，计算资源相对有限，算法工程师们训练大规模模型非常困难。算法工程师可能主要侧重于传统机器学习方法，如支持向量机、决策树等。技术背景相对较为传统。• 到了第二阶段，随着深度学习的兴起，开源数据集和开源算法的普及使得算法工程师可以更轻松地获取数据和算法，并有更多机会进行实验和研究。算法工程师开始掌握深度学习技术，对神经网络和大模型的搭建和调参有更深入的了解。• 在第三阶段，由于算力和模型的大迸发，云计算和分布式计算技术的普及为算法工程师提供了强大的支持。随着ChatGPT等大模型的出现，算法工程师需要具备更高级的自然语言处理技术和对大规模模型的训练和部署有更深刻的理解。相应的，算法工程师们不变的共性我觉得是算法工程能力与持续学习能力，在三个阶段中，算法工程师们都需要保持持续学习的态度，算法工程师最必备的创新精神和解决问题的能力都是推动人工智能技术发展的关键。人工智能领域中的优秀知名企业合合信息在其发展历程中也经历了上述三个阶段，这些阶段是其不断成长和壮大的过程。首先是垂直领域的研究阶段，这时企业需要专注于自身所处领域的提升与深入研究。在早期，合合信息专注于特定领域的解决方案，如图像处理与文字识别处理。通过集中资源和专业知识，公司积累了在特定领域的优势，为行业的发展做出了贡献。随着神经网络与深度学习的出现，合合信息也率先对数据和算法展开持续性、深入性的理解与研究。这一时期，公司加大了对研究团队的投入，开展更深入的学术研究，探索更加复杂的算法和模型。对数据的收集、处理和标注变得至关重要，而深度学习等新兴算法的引入也帮助合合信息在行业市场领域上取得了重要突破。大规模模型的出现使得算法工程师需要关注更高效的训练和推理策略，而丰富的数据源也为模型的泛化性能和稳定性提供了支撑。在这个阶段，合合信息也十分重视对算法工程师和工程团队的培养，着力于技术落地和实际应用。合合信息作为人工智能领域的优秀企业，经历了垂直领域的研究、对数据和算法的持续性深入研究，以及大模型阶段的工程能力和数据源需求的深入研究。在每个阶段，公司都不断适应技术发展的脉搏，不断探索新的可能性，为人工智能的进步和应用做出了积极的贡献。随着人工智能领域不断发展，合合信息将继续引领科技创新的浪潮，为推动人工智能技术的进步和社会的发展做出更多努力。当下除了算法工程师，还能从事哪些相关工作？在大模型时代下，算法专业的学生们确实会面临一些焦虑，担心只有成为算法工程师这一条路，而且在大模型如此强大的情况下，是否能在算法领域找到自己的价值。合合信息针对学生们普遍性的焦虑给出了如下建设性的回答：若我们从更宽的视角来看待算法的应用，就会发现，我们可以在算法周边开展的工作实际上非常广泛，能够拓宽我们的职业边界。在大模型时代，如何将技术突破产业化成为一个重要的问题。我们可以从以下几个方面来优化和拓展算法专业学生的职业选择：首先，大模型的出现带来了对算法模型的理解和调参技巧的需求，提示工程师成为一个炙手可热的职业。在美国，已经有招聘提示工程师。提示工程师必须对大模型机理有深刻的理解，这样才能发挥出对应的价值。如下图中近期大火的AI人工智能工程师。大模型时代下的产品经理也成为非常重要的角色。产品经理需要理解大模型算法原理，基于大模型从用户和市场的角度设计满足需求的产品。当前时代的一个产品设计范式的变化是将复杂的流程简化为只有一个对话框，这需要产品经理对大模型技术的了解和应用。同时，在大模型时代，售前和市场团队负责解释和宣传算法产品，这样才能更好地向客户解释产品的功能和优势，扩大产品的影响力。数据工程师在收集和处理数据方面也扮演着重要角色，保证模型训练和优化的顺利进行。除了以上几个例子，大模型的广泛应用还带来了诸如模型监测与解释专家、模型安全专家、模型可解释性研究者等新的职业机会。 二、大模型时代下，算法工程师及转型需要具备什么能力？大模型时代下优秀的算法工程师应该具备的优秀特质合合信息认为，算法工程师应当具备如下几个主要的优秀特质！~1. 对算法理解的能力：算法工程师需要深刻理解不同类型的算法，包括传统机器学习算法和深度学习算法，了解其原理和适用场景。对于大模型，必须掌握复杂的神经网络结构、激活函数、损失函数等，以及参数调优和优化方法。只有深刻理解算法的本质，才能在实际应用中灵活选择和调整算法，使其发挥最佳性能。2.  对数据理解的能力：在大模型时代，数据是算法的基石。算法工程师需要具备对数据的深刻理解和处理能力。这包括对数据的质量、规模、特征的认知，能够进行数据预处理、特征工程等，以提升模型性能和泛化能力。同时，对于大规模数据的处理，算法工程师需要掌握分布式计算和存储技术，以高效处理海量数据。3. 算法工程能力：算法工程师需要具备高效的算法实现和工程化能力。这包括熟悉常用的深度学习框架和库，能够灵活搭建、训练和优化大模型。同时，要熟悉分布式计算环境和GPU加速等技术，以提高模型训练和推理的效率。此外，算法工程师还需掌握模型监测与解释、模型可解释性等技术，确保模型的可靠性和可解释性。转型时怎么进行已有算法知识能力迁移？首先关于这个问题，合合信息指出在大模型时代下，已有的算法知识和能力是非常宝贵的资源。除了在纯粹的算法工程师角色中发挥作用，这些知识和能力还可以通过迁移技术理解和解释能力在多个领域得到应用。在大模型产品设计中，深入理解并清晰解释算法工作原理和应用是确保产品成功的前提。售前和市场推广过程中，对算法进行解释能够向客户展示产品的价值和优势，提高产品的认可度。其次数据在大模型时代的地位越发重要，迁移数据驱动决策能力也成为一项关键技能。算法工程师对数据的敏感性和驱动决策的思维方式可以迁移到产品经理、运营等多个角色中。在这些职能中，数据的感知帮助更好地理解用户需求，优化产品性能，并制定有效的市场策略。三、大模型时代下，算法及相关工作者提升与拓展算法工程师转型需要学习哪些？在大模型时代下，算法工程师转型所需整合和学习的内容与专业主要取决于他们的目标岗位。首先，他们应该全面融入大模型技术，真正将其应用于学习和工作中。其次，转型的目标岗位将决定需要掌握的岗位技能：1. 产品相关能力：对于转型为产品经理，理解产品的整个生命周期至关重要。这包括市场研究、需求收集、产品设计、项目管理以及产品推广等。具备商业意识，了解用户需求，掌握产品设计和管理的基本方法是必备技能。2. 技术支持和市场营销：如果转型为售前工程师或市场营销角色，需要学习客户服务技巧，了解市场营销策略，掌握公众演讲和客户服务技能。3. 数据科学：计划转型为数据工程师的人可能需要加强对统计学、预测模型、机器学习等方面的学习，并熟悉如何使用相关的工具和平台进行数据分析。合合信息对算法新人有什么样的培养呢？合合信息相关负责人表示，首先，在人才选拔阶段公司会非常慎重，选能力足够匹配的，因为进来会配备将近三年的成长期。其次，公司创始人及高层都非常重视fresh的成长，期望新人在三年左右成为有核心竞争力的成员，希望大家，有所得，有所乐，合成长。应届生加入合合，未来市场竞争下有什么优势？首先，合合信息当前的算法人员稳定性非常高，这主要有两点原因：首先，每个人有足够的机会去发挥自己的能力，在某个领域他就是专家，我相信算法人才心中是有梦的，而梦需要土壤去发芽。公司追求先进技术，纯粹的技术基因让这个土壤非常肥沃。二是因为从合合成长起来后离开的算法人员在社会上是被认可的，甚至是被抢的。其次，大家可以认真思考一个问题，个人如何保持在算法技术上的领先性和竞争力？互联网时代，信息很多很杂。如果把这些信息比做一阵风，其中的职场人可以是蝴蝶也可以是纸片，他们的区别是：蝴蝶可以顺着大风越飞越远，但是也有能力微微抵抗风向，朝自己的方向飞。而纸片只有一条路走，顺风前进。",
        "voteup_count": 1,
        "updated_time": "2024-04-29 17:21:21",
        "question_id": 652499873,
        "user_id": "dd0cf3f9b8809033760b59336b599f6d"
    },
    {
        "answer_id": 3477543368,
        "content": "1. 心脏好的，一周不睡觉死不了2. 颈椎腰椎好的，做一天脖子不疼3.眼睛好的，看一天电脑屏幕眼睛没事反正就往死里卷，什么都学什么都得会就行了呗，这东西又没多难学。。。",
        "voteup_count": 7,
        "updated_time": "2024-04-24 23:26:44",
        "question_id": 652499873,
        "user_id": "9936b59ad9127bb10e36ecd438d5a6b4"
    },
    {
        "answer_id": 3478494720,
        "content": "发现大模型技术去年可能就是在风口上，热度拱上去的。时间来到了2024年，大家开始冷静下来，开始看LLM领域的商业化变现的可能领域。在软件及大数据领域，今年开始有感受，大模型并非是“飘上天的东西”。简单科普下什么是大模型：大模型是指具有大量参数和复杂结构的深度学习模型，能够在多个任务上表现出良好的性能。既然本题的主题是与算法工程师相关，那么我们就得先要看看，LLM时代下，时代赋予算法工程师的工作职责：模型研发： 这是最基础的工作，没有研发就没有算法创新。算法工程师需要参与大模型的架构设计、算法开发、模型训练和优化等工作。应用研发： 这层就开始往服务应用层面靠拢了，算法工程师需要将大模型应用于实际场景中，例如自然语言处理、计算机视觉、语音识别等。大模型的维护： 简单点来说，除了“赚钱”，还要时不时的给机器“保养”。LLM算法工程师需要对大模型进行持续的维护和更新，以确保其性能和稳定性。基于上面的工作职责，我们不难推测出对应工程师的关键能力：首先，基础中的基础，就是需要有扎实的算法理论基础。只有扎实的基本功，深入理解各种机器学习和深度学习算法的原理和应用，才能够根据具体问题选择合适的算法。其次，就是“理论和实践相结合”，不能空有理论。新一代算法“程序猿”需要能够熟练使用各种编程语言和深度学习框架，并能够将算法模型应用于实际问题中。然后，猜到核心技能--分布式计算和高性能计算技术，因为大模型的训练和运行往往需要大量的计算资源，这个技能是区别于普通开发者的核心技能。再有，另一个核心技能--数据工程能力。大模型的训练和运行需要大量的数据，因此算法工程师还需要具备一定的数据工程能力，能够收集、清洗和处理大规模数据。除了上述的硬能力，作为一个优秀的“天选打工人”，还需要有软能力。例如跨领域融合能力。因为 大模型的应用场景非常广泛，涉及到自然语言处理、计算机视觉、语音识别等多个领域，因此算法工程师需要具备跨领域融合的能力，能够将不同领域的知识和技术结合起来。再例如良好的沟通能力和团队合作能力。大模型的开发和应用往往需要多个团队协作完成，因此算法工程师需要具备良好的沟通能力和团队合作能力，能够与其他团队成员有效沟通合作，共同完成项目。",
        "voteup_count": 1,
        "updated_time": "2024-04-25 18:33:50",
        "question_id": 652499873,
        "user_id": "7a55981814fcf140d01ee0ff0e45901d"
    },
    {
        "answer_id": 3478303448,
        "content": "基于大模型的全栈开发，就是懂业务，将模型应用于实际的业务和产品。还懂模型微调，还有职场软技能。越全能越吃香，世人人称：大佬。以上是在企业中，如果在研究院或高校类型的机构，有具体的个人研究方向，比如是算法研究员。大模型预训练、强化学习、多模态、具身智能等等",
        "voteup_count": 0,
        "updated_time": "2024-04-25 15:49:08",
        "question_id": 652499873,
        "user_id": "c9f3e05839eec8b63ac5103b7b5535ba"
    },
    {
        "answer_id": 3466900512,
        "content": "大模型时代，什么样的算法工程师更吃香？在这个由数据驱动的时代，算法工程师如同现代魔法师，拥有通过代码操纵数据，解锁知识和机遇的能力。特别是在大模型如ChatGPT这类前沿技术的推动下，算法工程师的角色变得更加重要了。那么，在大模型的浪潮中，到底什么样的算法工程师更受欢迎呢？多学科融合能力首先，跨界的能力非常关键。算法工程师不再是单打独斗的角色，他们需要具备跨领域的知识，能在生物信息学、金融、物联网等多个领域中游刃有余。比如，利用大模型进行药物发现或者优化金融模型，这些都需要算法工程师能够理解不同领域的专业知识，才能更好地应用AI技术解决实际问题。优秀的系统设计能力接下来，系统设计能力也是不可或缺的。大模型的运行和维护需要庞大的计算资源和复杂的系统支撑。因此，那些能设计和优化大规模计算系统，提高效率，降低成本的工程师，无疑更受企业的青睐。能够在保证模型性能的同时，优化资源配置和成本的算法工程师，无疑是大模型时代的宠儿。持续的学习和创新能力此外，持续学习和创新是算法工程师的必备素质。AI领域日新月异，新算法、新技术层出不穷。算法工程师需要保持好奇心和学习热情，不断探索新知识、新技术。例如，深入理解Transformer架构的原理和优化，掌握最新的自然语言处理技术等，都能让算法工程师在职场上更具竞争力。强大的业务理解和沟通能力最后，强大的业务理解能力和沟通技巧同样重要。算法工程师需要将复杂的技术问题转化为简单的业务解决方案，这不仅需要技术知识，还需要深刻的业务洞察力。此外，与团队成员、非技术人员的有效沟通，也是推动项目成功的关键。案例分析：优化电商推荐系统以电商推荐系统为例，优秀的算法工程师不仅能使用大模型进行精准推荐，还能优化算法以处理海量的用户数据，提升系统的响应速度和准确性。同时，通过与业务团队的沟通，不断调整推荐策略，以适应市场变化和用户需求。总结来说，大模型时代的算法工程师需要具备多学科知识、优秀的系统设计能力、持续的学习和创新精神以及出色的业务理解和沟通能力。具备这些能力的工程师，无疑能在AI领域大放异彩，成为各大企业争抢的热门人选。",
        "voteup_count": 4,
        "updated_time": "2024-04-15 17:39:57",
        "question_id": 652499873,
        "user_id": "5e087aa93c55e3ea983bcb6fdc4c7613"
    },
    {
        "answer_id": 3469358390,
        "content": "算法工程师不是简单的代码机器。他们需要的不仅仅是编程能力，更需要有深厚的数学基础和对数据的敏感度。就像那些在热门话题中讨论的，人工智能的发展不能仅仅依赖于算力的提升，而是要看重算法的综合能力。这意味着，算法工程师需要具备创新思维，能够设计出既高效又实用的算法模型。举个例子，你看那些在烧烤店被自动烧烤机取代的师傅们，他们的失业并不是因为技术进步本身有问题，而是因为技术应用的方向出了问题。算法工程师在设计算法时，应该考虑到技术对社会的影响，而不是仅仅为了提升公司的股价。这种社会责任感，是大模型时代算法工程师的重要素质之一。再来看看那些在股市中短线操作的人，他们追求的是短期利益，而不是长期的稳定发展。同样，算法工程师也不能只关注眼前的成果，而应该有着长远的眼光。比如斯坦福大学的HAI发布的2024人工智能指数报告，这份报告详细地分析了人工智能的发展趋势，对于做AI研究、投研报告的人来说，是一份宝贵的资料。算法工程师应该具备这样的研究精神，不断学习最新的技术动态，提升自己的专业素养。而且，算法工程师还需要具备跨界合作的能力。就像未来十年最有前景的行业中，人工智能只是其中之一。算法工程师要想在这个大模型时代中脱颖而出，就必须能够和其他领域的专家合作，共同推动技术的发展。比如在美容业，算法工程师可以和美容专家合作，开发出更精准的面部识别技术；在金融业，他们可以和金融分析师合作，设计出更稳健的投资模型。当然，我们也不能忽视算法工程师的情商。就像那些担心孩子未来的人一样，算法工程师也需要关注自己的情感和人际交往能力。在这个快速发展的时代，只有具备良好的沟通能力和团队协作精神，算法工程师才能更好地理解业务需求，设计出更符合市场需求的产品。最后，我想说的是，算法工程师不应该成为技术的奴隶，而应该是技术的主人。他们需要有批判性思维，能够对现有的技术和算法进行质疑和改进。就像那些在博鳌亚洲论坛上讨论的，中国有机会制造出世界级的产品，这需要算法工程师有敢于创新、勇于实践的精神。总结一下，大模型时代吃香的算法工程师，不仅要有扎实的技术基础，还要有社会责任感、研究精神、跨界合作能力、情商和批判性思维。这样的算法工程师，才能在这个充满机遇和挑战的时代中，找到自己的位置，创造出真正的价值。",
        "voteup_count": 1,
        "updated_time": "2024-04-17 18:33:44",
        "question_id": 652499873,
        "user_id": "cefef56e0c463853512bae9a8439f356"
    },
    {
        "answer_id": 3466044738,
        "content": "https://zhuanlan.zhihu.com/p/680209367",
        "voteup_count": 12,
        "updated_time": "2024-04-14 23:51:58",
        "question_id": 652499873,
        "user_id": "35f4c4d4119b2afefa6cbfd7518b316c"
    },
    {
        "answer_id": 3479036070,
        "content": "随着大模型时代的来临，算法工程师的需求日益旺盛。在这个时代，算法工程师不再仅仅局限于传统的机器学习或深度学习领域，而是需要拥有更广泛的知识储备和更全面的技能。那么，在大模型时代，什么样的算法工程师更吃香呢？首先，拥有扎实的数学和编程基础是算法工程师的必备条件。数学是算法工程师的核心工具，对于线性代数、概率统计、优化算法等知识的掌握程度将直接影响算法的性能和效果。同时，熟练掌握至少一门编程语言（如Python）以及相关的数据处理和可视化工具（如Pandas、Numpy、Matplotlib等）也是必不可少的。其次，具备深厚的数据分析和处理能力也是算法工程师的重要素质。在大模型时代，数据的质量和数量都呈现出爆炸性增长的趋势，如何有效地处理和分析这些数据成为了算法工程师必须面对的问题。除了掌握基本的数据处理技巧外，还需要具备数据清洗、特征工程、数据可视化等方面的能力，以便能够更好地挖掘数据中的信息，为算法的设计和优化提供支持。此外，对于前沿技术的学习和掌握也是算法工程师不可或缺的能力。随着大模型技术的不断发展，新的算法、框架和工具层出不穷。算法工程师需要保持敏锐的嗅觉，及时关注和学习这些新技术，以便能够将其应用到实际工作中，提高算法的性能和效率。除了以上几点外，具备团队合作精神和良好的沟通能力也是算法工程师的重要素质。在大模型时代，算法工程师往往需要与其他领域的专家（如数据科学家、业务分析师等）进行紧密合作，共同完成项目的开发和实施。因此，算法工程师需要具备良好的团队合作精神和沟通能力，能够有效地与团队成员进行交流和协作，确保项目的顺利进行。综上所述，大模型时代对算法工程师的要求越来越高。要想在这个时代脱颖而出，算法工程师不仅需要具备扎实的数学和编程基础、深厚的数据分析和处理能力以及前沿技术的学习和掌握能力，还需要具备团队合作精神和良好的沟通能力。只有这样，才能在激烈的竞争中脱颖而出，成为大模型时代下的佼佼者。",
        "voteup_count": 1,
        "updated_time": "2024-04-26 09:45:33",
        "question_id": 652499873,
        "user_id": "6176efbdabab8ee196d38725ce2a54e2"
    },
    {
        "answer_id": 3476659526,
        "content": "问题比答案更重要",
        "voteup_count": 0,
        "updated_time": "2024-04-24 10:00:45",
        "question_id": 652499873,
        "user_id": "dc04ad9559ef5cc145287e9eefcd92a7"
    },
    {
        "answer_id": 3482902970,
        "content": "能写能训大模型的算法工程师最吃香",
        "voteup_count": 0,
        "updated_time": "2024-04-29 18:36:44",
        "question_id": 652499873,
        "user_id": "36be0adfdf09d23ec8fb10e4be44e179"
    },
    {
        "answer_id": 3480857412,
        "content": "在AI人工智能领域，有许多不同类型的算法工程师，他们可能会专注于不同的子领域或任务，并在工作内容、技能要求和职责方面有所区别。以下是一些常见的类型：深度学习算法工程师：专注于设计、实现和优化深度神经网络模型，包括卷积神经网络（CNN）、循环神经网络（RNN）、变换器（Transformer）等。他们负责模型的架构设计、训练、调优和部署。自然语言处理（NLP）算法工程师：专注于处理和理解自然语言数据的算法工程师。他们可能涉及文本分类、情感分析、命名实体识别、语言模型等任务，并使用各种技术，如词嵌入、注意力机制、语言模型等。计算机视觉（CV）算法工程师：专注于处理和理解图像和视频数据的算法工程师。他们可能负责目标检测、图像分类、图像分割、人脸识别等任务，使用的技术包括卷积神经网络、特征提取、目标跟踪等。强化学习算法工程师：专注于开发和优化强化学习算法，用于训练智能体在某个环境中学习并采取行动以达到某个目标。他们可能会涉及策略优化、价值函数估计、探索与利用等方面的工作。推荐系统算法工程师：专注于设计和实现推荐系统，用于根据用户的历史行为和偏好向其推荐个性化的内容或产品。他们可能会使用协同过滤、内容过滤、深度学习等技术。机器学习工程师：广泛应用于各种领域，负责应用机器学习算法解决实际问题。他们可能需要处理数据预处理、特征工程、模型选择与评估、模型解释等任务。在大模型时代，笔者认为深度学习算法工程师可能更有竞争力。这是因为大型模型在各个领域的应用越来越广泛，而深度学习算法工程师通常是负责设计、实现和优化这些大型模型的主要人员。深度学习算法工程师具备以下几方面的优势：对大型模型的设计和实现有丰富经验：深度学习算法工程师通常具备丰富的深度学习模型设计和实现经验，能够有效地构建适用于不同任务和场景的大型模型。熟悉大规模数据处理和训练技术：大型模型通常需要大规模数据进行训练，而深度学习算法工程师对于数据处理、数据增强、分布式训练等技术有较深的了解和应用经验。能够优化大型模型的性能和效率：深度学习算法工程师具备优化模型性能和资源利用率的技能，能够针对大型模型的训练和推理过程进行优化，提高模型的效率和性能。了解大型模型的部署和应用场景：深度学习算法工程师通常对于大型模型的部署和应用场景有较深的了解，能够将模型有效地应用于实际问题，并与工程团队协作进行部署和维护。#人工智能 #AI大模型 #算法工程师 #深度学习 #自然语言处理 #计算机视觉 #强化学习 #机器学习",
        "voteup_count": 1,
        "updated_time": "2024-04-27 23:05:12",
        "question_id": 652499873,
        "user_id": "a3bd0b5951e51e825bcc026d556a8928"
    },
    {
        "answer_id": 3478503435,
        "content": "在AI行业，今年先是出现大厂“百模大战”，紧接着是关于“应用为王”的共识。大模型如何落地，实现商业闭环，是人们关注的下一个焦点。不少大模型厂商早已悄悄布局，无论是B端还是C端，是通用大模型还是垂直领域的行业大模型，应用层的比拼早已暗潮汹涌。然而，国内大模型从基础研发到应用都还尚处早期。部分雇主企业的业务存在“蹭热度”、“过度包装”的嫌疑，无论是技术基础还是应用的多样化均有待提高。混乱的另一面是机遇和空间。对于大模型应用层企业雇主和创业者来说，如何找到差异化应用，并准确触达消费场景，实现商业闭环是成功的关键。而对于求职者来说，在挤入风口的同时也要看清行业趋势、避免成为资本逐利游戏的炮灰。应用层：亟待爆款应用提价，生成式AI赛道被看好 ╱ 01模型层：混战激烈，各厂商抢占行业应用市场 ╱ 02国内数据公司：迎接百亿市场规模的泼天富贵 ╱ 03端侧应用：方兴未艾，暗藏机遇 ╱ 04应用层：亟待爆款应用提价，生成式AI赛道被看好在C端，生成式AI无疑是应用大热门。前有Character.AI、HeyGen引爆投资圈，后有Pika惊艳硅谷，生成式AI应用也成为全球市场里的香饽饽。麦肯锡指出，生成式AI有望解锁万亿级美元价值，并预测AI整体将为全球经济带来高达25.6万亿美元的正面经济影响，其中来自生成式AI的贡献高达7.9万亿美元，大概相当于当前全球GDP总量的8%。国内，生成式大模型厂商也纷纷推出了C端应用：如科大讯飞的讯飞星火、商汤商量、智谱AI的智谱清言、百度文心一言等等。据工业和信息化部赛迪研究院数据，今年我国生成式人工智能市场规模有望突破10万亿元。在生成式AI的爆火下，今年AIGC相关岗位早早地就迎来高薪热招。据猎聘研究院发布的数据，2023年1~8月，AIGC新发职位同比增长139.76%，招聘平均年薪达41.09万元。其中深度学习、图像算法、自然语言处理（NLP）位居前三，招聘平均年薪均超50万，分别为55.78万、55.10万、53.31万。To-C市场里，现象级应用仍然缺席，这也意味着机遇。中金研报指出，C端工具类应用AI模块提价弹性高，将来C端可能会出现生成式AI类的现象级应用。字节跳动在这一战场中似乎有更大的野心和优势。虚拟聊天机器人方面，字节推出了豆包；AI视频生成方面，PixelDance一经发布便惊艳海内外。在AI人才队伍的筹备上，字节也保持了大力招聘的节奏。据脉脉高聘人才智库11月发布的《2023泛人工智能人才洞察》显示，字节连续三年成为AI岗位发布最多的企业。鉴于技术制约，以及国内用户付费意识不高等因素，AI在C端的应用或有难度。求职者在选择AI的To-C赛道雇主时，要对公司业务在C端是否有发展前景有一定的判断：比如技术能力能否支撑其野心、是否具有流量基础等，以防业务关闭时被优化地措手不及。模型层：混战激烈，各厂商抢占行业应用市场相较于To-C端尚不确定的商业模式，B端和B-To-C端应用落地实现路径较短且明晰，各大厂商热情更高，纷纷不遗余力地抢占自家大模型在各行各业的应用高地。我们发现，以龙头科技公司为代表所主导的通用大模型正在多领域布局，然而泡沫已然隐现。对大模型的训练需要庞大的算力和资金，且技术门槛较高，因此，大模型的研究通常默认由大厂或优势明显的公司去完成。而细分行业的厂商受限于资金和算力，便会成为前者的客户。瞄准这块企业客户需求旺盛的大蛋糕，通用大模型厂商们开始抢占各行业的市场。百度：宣称与超过300家企业成为生态伙伴；阿里：阿里云于4月宣布与7家企业推动大模型在油气、电力、交通等行业落地；华为：基于其盘古大模型在气象、矿山等垂直领域企业合作发布大模型；腾讯：已和数十个行业的22家企业达成大模型共建合作；科大讯飞：宣布星火大模型首批接入36个行业3000余家企业；虽然通用大模型布局领域众多，但业内观点认为，通用大模型会遵照“赢者通吃”的规律。未来，市场上会仅存几个龙头大模型，最终形成“1+N”的“少通用大模型+多应用生态”模式。因此，在大模型竞争的后半段，泡沫会逐渐被戳破。扩张过快的通用大模型人才队伍，隐现缩减风险。据业内人士向职场Bonus透露，很多大厂前期都在试水，成立AI创新部，将人才招进来后一段时间若业务部门没有产出，就会大批裁员。想要盲目挤进大厂AI队伍的人才，需要思考下当前公司的AI人才规模是否过剩，后期是否有被优化、活水去其他部门和项目的变动风险。除了需要注意阶段性的泡沫，人才找工作时还要注意“真假自建大模型”的过度包装乱象。这种情况多发于垂类行业。我们注意到，今年市场上的垂类大模型可谓五花八门：金山办公：WPS AI大模型，是接入MiniMax多个大模型以及百度等厂商的大模型后调优而来；度小满：发布的首个金融类开源大模型“轩辕”，是在Bloom开源大模型基础上训练；学而思：推出过自研大模型MathGPT；美图秀秀：自研视觉大模型MiracleVision，是在GPT大模型基础上训练微调。业内人士告诉职场Bonus：很多在宣传时冠以“自研”之名的垂类大模型，实际上就是接入多个开源或者未开源大模型后，用自己的行业数据进行微调，并不是真的从0开始构建自己的大模型。这种情况下，其实没有什么“垂类行业专家大模型”，只有垂类行业专家Agent。AI Agent（人工智能代理）无疑是大模型混战后半段的新焦点，更是公认的下一个风口。国内如百度、智谱AI等大厂和AI独角兽先后发布了自己的Agent开发框架，面壁智能的“大模型+Agent”技术已在金融、法律等场景都有落地。Agent 的爆火也带动了相关人才的需求和薪资。某大厂的AI高级算法工程师告诉职场Bonus, 很多大厂都青睐Long Chain等Agent相关技术人才，开出的月薪高达6万以上，一些企业内部也组建了专门的团队探索AI Agent 的开发应用。国内数据公司：迎接百亿市场规模的泼天富贵AI的落地离不开数据。高质量数据的匮乏，是当前大模型落地的一大挑战。在AI行业应用中，数据服务行业轮到了这泼天的富贵。艾瑞咨询的数据显示，AI基础数据服务市场，将在未来数年内持续增长，到2025年，国内的整体规模预计将达到101.1亿元，市场增速将达到31.8%（2024-2025年）。由此，数据服务商陆续在资本市场被看好。国内唯二的一家AI数据上市公司海天瑞声今年2月以来股价曾一度狂飙，星尘数据、标贝科技、整数智能、柏川数据、曼孚科技、恺望数据等创业公司也融资颇丰。行业头部数据商更是在AI应用和标准制定中具有较大的话语权。例如，云测数据凭借着多年来在汽车行业积累的数据优势，参与制定了智能网联汽车场景数据的两大行业标准；拓维信息和华为正式签署协议，提供交通、教育等领域积累的海量数据，助力盘古大模型在交通行业的落地。在这一轮数据红利中，数据标注也乘风而起，数据标注人才市场转型知识密集型。据量子位智库《中国AIGC数据标注产业全景报告》预测：未来五年，数据标注相关专业人才缺口将达百万量级。多个大厂、数据服务商以及科技初创企业都开始增加数据标注人员的招聘。走在前面的百度于今年4月份就开始在全国多地组建数据标注基地，科技初创公司恺望数据打造了“恺望数据学院”，已培训50所学校，超过1500名学生从事数据标注。据职友集数据显示，2023年数据标注岗位的数量的增长速度较2022年提高了342%。薪资待遇和人才画像方面，职场Bonus检索各求职平台后发现，比起以往普通的数据标注岗位，AI数据标注员/AI训练师的人才背景要求和薪资都高出不少。但需要注意的是，数据标注行业存在严重外包现象，其薪资待遇可能会随着层层外包而逐级递减，并且受地域影响较大。而人才队伍上，高学历多领域人才逐渐成为刚需。这背后离不开大模型应用需要的数据范式发生了变化。以往仅依靠劳动力就能完成的旧拉框、标注的通用数据标注任务，将逐渐被AI取代。但目前很多大模型现在还存在幻觉、缺乏行业知识、需要提示词工程等问题，AI标注并不能满足大部分行业的需求，因此，人机协同成为新模式，数据标注正逐渐转型为依靠自然语言能力以及垂直领域的专业知识的知识密集型行业。端侧应用：方兴未艾，暗藏机遇没错，终端厂商们也在大模型领域“开卷”，紧锣密鼓地发布自家大模型：OPPO的AndesGPT大模型，vivo蓝心大模型、小米MiLM大模型…… 荣耀、华为也纷纷开始布局，将大模型装进手机。就连一向慢半拍的苹果和三星也是如此：一个在悄悄招人，一个则宣布会将大模型带到最新Galaxy 旗舰机型。除此之外，其他终端设备厂商如联想、科大讯飞，甚至长虹电器，都开始将大模型接入终端设备。在这股终端设备厂商追求大模型端侧应用的浪潮中，相关岗位发布如雨后春笋。● 来源：OPPO招聘官网● 来源：小米招聘官网虽然目前在端侧的大模型应用，大部分厂商似乎也只迈出了语音助手的第一步，同质化程度较高；但对于大模型应用来说，端侧的个人化大模型布署至关重要。完成端侧大模型应用的成熟布局，实现差异化，以及轻量、低能耗、高效率运营——将成为各硬件端企业的下一个必经关卡，也将成为下一个蓝海。参考文章：1.《LangChain - Agent: 其实没有什么「垂类行业专家大模型」，只有「垂类行业专家 Agent」》，Pytorch Lightning",
        "voteup_count": 0,
        "updated_time": "2024-04-25 18:44:27",
        "question_id": 652499873,
        "user_id": "0c222c8b867b5cb954061739dceeeae8"
    },
    {
        "answer_id": 3483264016,
        "content": "文化和交运只是第一波试水，铁定要深入到政治经济工业军事航天生物等，用发展看即可。工业/战争/医用/教培机器人，飞船控制中枢，亚光速推进器设计，统一调度作战中心，间谍安防，人体增强，机械增强，肌体除雾修复，物种设计，文明培育，目标导向涌现设计等",
        "voteup_count": 1,
        "updated_time": "2024-04-30 06:49:42",
        "question_id": 652499873,
        "user_id": "aa9e08b752e081e85db05a51615601dc"
    },
    {
        "answer_id": 3476687621,
        "content": "看你做什么了，做核心模型的要研究的深，对LLM走向以及每个细节熟悉，并且有实操经验更佳。做大模型辅助的，主要还是工程能力强吧，那做落地的，沟通要好，技术全面。",
        "voteup_count": 1,
        "updated_time": "2024-04-24 10:20:17",
        "question_id": 652499873,
        "user_id": "4a90f5c6f13762953ac467b6624658e6"
    },
    {
        "answer_id": 3471559309,
        "content": "在这个大模型时代，算法工程师的角色和需求正在经历前所未有的变化。随着深度学习、机器学习和人工智能技术的飞速发展，大模型，如GPT、BERT、和其他各种变体，已经成为了行业的热点。这些模型的能力在不断扩展，从基本的文本处理到复杂的图像识别、自然语言理解乃至于生成艺术和音乐，其应用范围之广泛、影响力之大，前所未有。在这样的背景下，什么样的算法工程师更吃香呢？我们将从技能、创新能力、跨学科能力和沟通协作能力这四个方面来探讨。技能层面1. 熟练掌握机器学习和深度学习原理在大模型时代，算法工程师首先需要有扎实的机器学习和深度学习理论基础。这包括但不限于对神经网络、梯度下降、反向传播等基本概念的深刻理解，以及对最新研究成果和技术动态的持续关注。例如，能够理解和实现BERT、Transformer等模型的工程师无疑是市场的宠儿。2. 掌握大模型训练的技巧大模型的训练需要大量的计算资源和精细的调参技巧。熟悉分布式训练、模型压缩、微调等技术，能够有效地利用有限的资源获取最优的模型性能，是算法工程师在大模型时代必备的技能。3. 数据处理能力数据是训练模型的基石。有效的数据预处理、数据增强、以及对数据质量的把控能力，都是算法工程师必须具备的技能。能够设计和实施有效的数据处理流程，不仅可以提高模型的训练效率，还能显著提升模型的泛化能力。创新能力1. 模型创新在标准模型已经非常成熟的今天，如何在此基础上进行创新，是衡量算法工程师能力的一个重要指标。这包括对模型结构的改进、训练过程的优化、以及新模型的设计等。2. 应用创新除了在模型本身进行创新之外，如何将模型应用到新的领域，解决实际问题，也是衡量算法工程师能力的重要方面。例如，将NLP模型应用于法律文本自动生成、将图像识别模型应用于医疗影像分析等。跨学科能力随着AI技术的不断发展，算法的应用场景越来越广泛，这就要求算法工程师不仅要有深厚的技术功底，还需要有跨学科的知识和视野。例如，与心理学、社会学等学科结合，开发更加贴近人类认知和社会需求的AI模型；与生物信息学结合，推动精准医疗的发展等。沟通协作能力在大模型时代，算法工程师往往需要与来自不同背景的人员协作，包括数据科学家、软件工程师、产品经理等。因此，良好的沟通能力和团队协作能力对于算法工程师来说至关重要。能够清晰地表达自己的想法，理解他人的需求，以及有效地协调资源和进度，是算法工程师在项目中取得成功的关键。结论在大模型时代，最吃香的算法工程师是那些既有深厚的技术功底，又能不断创新，同时具备跨学科知识和出色沟通协作能力的人。这些工程师能够在快速变化的技术环境中保持竞争力，推动AI技术的发展，解决实际问题。因此，对于 aspiring 算法工程师来说，不断学习新知识、拓宽视野、提升沟通能力，将是他们职业发展的关键。",
        "voteup_count": 1,
        "updated_time": "2024-04-19 15:37:00",
        "question_id": 652499873,
        "user_id": "16428935d651665fb3e4613f14a91fb4"
    },
    {
        "answer_id": 3482828431,
        "content": "AI说热点在大模型（如大规模语言模型、图像生成模型等）的时代，算法工程师的需求更加多元化和专业化。以下是几种特别受到欢迎和重视的算法工程师类型：模型研究与开发工程师：这类工程师专注于研究和开发新的算法模型或改进现有的模型。他们需要对深度学习、机器学习的理论和实践有深入理解，并能够使用这些理论来解决实际问题。对于大模型时代，能够设计、改进模型以实现更好的性能、更高效的计算和更低的资源消耗是特别重要的。数据工程师：大模型的训练和优化需要处理大量的数据。数据工程师在此过程中扮演了至关重要的角色，他们负责数据的收集、清洗、处理和优化，以确保模型训练的有效性和效率。他们需要精通数据处理技术和工具，并能够设计和实现高效的数据管道。模型优化与效率工程师：随着模型规模的不断扩大，如何在有限的计算资源下高效运行这些模型成为一大挑战。这类工程师专注于模型压缩、量化、硬件加速等技术，以提高模型的运行效率和减少计算成本。他们通常需要有深入的硬件知识和软件优化能力。应用开发工程师：这类工程师负责将复杂的算法模型应用于解决实际问题，包括但不限于语音识别、图像识别、自然语言处理等领域。他们需要能够熟练地将前沿的算法技术转化为实际应用，同时优化用户体验和应用性能。安全与隐私工程师：大模型可能涉及到大量敏感数据的处理，如何保护数据的安全和用户的隐私成为一个重要议题。这类工程师专注于研究和开发保护数据安全和隐私的算法和框架，确保模型的应用符合法律法规和伦理标准。跨领域融合工程师：在大模型的背景下，算法技术与其他学科如生物、化学、物理等的交叉应用变得日益重要。能够跨领域工作，将算法技术应用于不同领域问题解决的工程师，具有极高的价值。在这个大模型时代，算法工程师的角色不再仅仅局限于编写代码，更多地是要将理论与实践结合，解决实际问题。同时，持续学习新的知识和技能也是这个快速发展领域中保持竞争力的关键。",
        "voteup_count": 1,
        "updated_time": "2024-04-29 17:20:33",
        "question_id": 652499873,
        "user_id": "24f1e2c718242dddc19f80c58f566d2c"
    },
    {
        "answer_id": 3482951293,
        "content": "在大模型时代，以下几类算法工程师可能会更吃香 1. 自然语言处理（NLP）算法工程师：随着大模型在语言相关任务中的广泛应用，NLP 算法工程师能够利用大模型的语言理解和生成能力，开发出更智能的对话系统、文本生成、知识问答等应用。2. 强化学习算法工程师：大模型的出现为强化学习提供了更强大的表示能力和计算资源。强化学习算法工程师可以利用大模型来解决复杂的控制问题、优化决策过程。3. 多模态算法工程师：大模型通常结合了多种模态的数据，如文本、图像、音频等。多模态算法工程师能够设计和开发算法，处理和融合多模态信息，实现更全面和深入的理解。4. 模型优化和压缩算法工程师：大模型的规模通常很大，需要进行优化和压缩以提高性能和效率。模型优化和压缩算法工程师能够研究和应用各种技术，如剪枝、量化、蒸馏等，来减少模型的参数数量和计算量。5. 应用算法工程师：了解大模型的基本原理和应用场景，能够将大模型与具体业务需求相结合，开发出有实际价值的应用解决方案。此外，具备良好的编程能力、数学基础、数据分析能力和创新思维也是算法工程师在大模型时代的重要素质  你是算法工程师吗？业务需求相结合，开发出有实际价值的应用解决方案。此外，具备良好的编程能力、数学基础、数据分析能力和创新思维也是算法工程师在大模型时代的重要素质  你是算法工程师吗？",
        "voteup_count": 2,
        "updated_time": "2024-04-29 19:39:59",
        "question_id": 652499873,
        "user_id": "a46c4127d89ff4a8f3cc8e1d478caba0"
    },
    {
        "answer_id": 3469627294,
        "content": "在你的问题条件“大模型时代”下，指的是在Stable Diffusion和GPT出来到现在，大型模型层出不穷的时代。 以下是可能的大模型时代算法工程师角色及其细分岗位：核心算法研发\t基础模型研究员\t•\t研究并开发新型大模型架构与理论\t预训练模型工程师\t•\t实施大规模预训练项目模型应用与优化\t模型微调专家\t•\t对基础大模型进行任务特定微调\t模型服务化工程师\t•\t封装模型为API服务，优化部署与推理性能\t模型压缩与加速专家\t•\t压缩模型并优化其在各类硬件上的运行效率\t模型性能分析师\t•\t监控与优化模型训练推理性能，推动模型迭代多模态与跨领域\t多模态算法专家\t•\t开发处理多模态数据的大模型\t领域专用算法工程师\t•\t针对特定行业定制化大模型数据科学与工程支持\t数据工程师\t•\t构建与维护支持大模型的数据基础设施\t算法平台开发工程师\t•\t提供高效的算法开发与实验环境",
        "voteup_count": 2,
        "updated_time": "2024-04-18 21:39:29",
        "question_id": 652499873,
        "user_id": "df117e4bba8471db8328f00d36002081"
    },
    {
        "answer_id": 3483230715,
        "content": "这个问题就是大模型训练场是吧？各种大模型回答的模板",
        "voteup_count": 1,
        "updated_time": "2024-04-30 03:40:20",
        "question_id": 652499873,
        "user_id": "b76f749bf377af863181ee902ca7070b"
    },
    {
        "answer_id": 3482884876,
        "content": "\t1.\t大模型优化专家：随着模型尺寸的增加，优化算法以适应计算和存储限制变得至关重要。工程师们需要精通模型剪枝、量化、知识蒸馏等技术，以提高模型的运行效率和速度。\t2.\t多模态学习专家：在处理包含文本、图像、视频和声音数据的模型时，多模态学习专家需能开发能够综合这些不同数据类型的算法。这种能力在自动驾驶、增强现实等领域尤为重要。\t3.\t自然语言处理（NLP）专家：随着GPT和BERT等大型语言模型的普及，擅长自然语言处理的工程师需求日益增加。他们需要掌握最新的NLP技术和趋势，以开发和改进聊天机器人、翻译系统等应用。\t4.\t机器学习部署和维护专家：不仅要在实验室里训练模型，更要将这些模型部署到实际的生产环境中，并持续监控和优化。这要求工程师能够处理模型部署后的性能衰退问题，并优化模型以适应新的数据。\t5.\t伦理和透明度顾问：随着模型规模的扩大，其决策过程的透明度和公平性也受到越来越多的关注。专门从事算法伦理的工程师能帮助确保模型的公正性和责任性，评估和减轻偏见风险。\t6.\t数据科学家和分析师：大数据时代需要能够处理和解析大规模数据集的数据科学家，以从中提取有价值的信息，这对训练有效的大模型至关重要。",
        "voteup_count": 1,
        "updated_time": "2024-04-29 18:14:39",
        "question_id": 652499873,
        "user_id": "169f7a50e30d261b6e1bab6bfedf3c43"
    },
    {
        "answer_id": 3483418918,
        "content": "大模型时代，比拼的不再是单一能力，不管是什么工程师，最后拼的都是综合能力，拼的都是自己的不可替代性。大模型时代： 社交智慧+创造力+专业实操能力=个人不可替代性。一、社交智慧既然AI如此厉害了，我们一定不要在他的强项上努力了。那到底如何和AI找到差异化的能力价值呢？回归根本，聚焦于「人」的能力。1、情绪管理能力能够准确地察觉自己及他人的情感状态、情绪变化。懂得如何在适当的时候进行情绪管理，有效地应对他人的情绪，并表达自己的情感。2、社交洞察力能够观察和理解复杂社交情境中的直接言语的明示及非言语的暗示。懂得如何解读他人的肢体语言、面部表情和语气，从而更好地理解他们的意图和需求。3、人际交往能力具备良好的沟通技巧，包括积极倾听、表达清晰、善于提问和精准回应。能够适应不同的人际风格和沟通方式，建立积极、互惠的人际关系。4、冲突解决能力懂得处理人际冲突和矛盾，采取合适的方法和策略解决问题，维持良好的人际关系。AI技术的发展已经出现了一些类似有情感的AI语音应用，AI能够做到基础的带有感情的交流（如感谢、抱歉的委婉表达），但在共情力上，不可能达到替代人与人交流的真实与自然。就和「你无我有，你有我优，你优我精」的逻辑一样。我们要在「人」的底层情感、情绪赛道上不断修炼。二、创造力创新可能只是把很多存在的东西重做一遍，或者把几个看似不相关的东西组合在一起。创新很难吗？难，是因为「新」。但或许也不难，是因为创新或许只是变换了一个方法和形态。人能够提出新颖的观点和有创造性的想法。能够跳出传统的框架和限制，采用非常规的思考方式来解决问题或面对挑战。在以ChatGPT为例的文本模型中，大多的回答是基于在既有的公开信息下构建的交互体系，但是对于全新原创、未被提及的产品、概念等尚不具备完善的快速检索和架构重组的能力。人愿意尝试新的想法和方法，勇于面对不确定性和风险，并从中学习和成长；在不同的环境和变化之中，能够灵活调整思维和行为，从而应对新的挑战和需求。即便落地时困难重重，也能够将想法转化为实际行动，并持续努力实现目标。三、专业实操能力专业度很高的实操性工作，通常是指那些需要高度专业的知识和技能，并且在实际操作中灵活运用这些知识和技能的工作。以算法工程师来说，包括3个方面：1、专业技能大模型的训练需要大量数据，算法工程师必须熟悉数据的采集、清洗、标注等流程，以及数据预处理的方法，以确保数据质量和模型效果。同时还需要将算法与实际应用场景相结合，解决实际问题。不要为了技术而技术，技术最后都是为解决问题而服务的。2、产品化因为技术门槛的缘故，专业的AI产品经理现在很匮乏，所以作为算法工程师，如果能够拥有了解产品生命周期、市场研究、需求收集等产品相关能力，把自己的技术产品化，绝对是一项非常具有竞争力的能力。3、行业经验与隐性知识行业经验和特定领域的“Know-How”也属于专业实操。这类知识通常是难以形式化的“隐性知识”，需要通过长期的工作实践和经验积累才能获得。例如，一个资深的算法工程师能够把各种技术融会贯通，灵活使用，掌握不同场景下如何应用，如何预训练、微调、对齐和推理、如何优化性能、如何处理各种预料之外的情况等等。专业实操能力的积累适用于每个人，每个领域的人都可以通过它来形成自己的独特性。因此，专业实操能力在人们对未来的职业生涯规划中，具有更加重要的意义，是每个人都可以通过努力得到提升的发力点。大模型时代： 社交智慧+创造力+专业实操能力=个人不可替代性。努力在 3 个维度上提升自己的稀缺性，让自己成为不可替代的超级个体！",
        "voteup_count": 1,
        "updated_time": "2024-04-30 09:45:42",
        "question_id": 652499873,
        "user_id": "fe77c4658b209584a74c00d09fef74eb"
    },
    {
        "answer_id": 3483352120,
        "content": "在大模型时代，算法工程师的角色变得更加复杂和多样化。以下是一些关键技能和特点，使得算法工程师在这个时代更加受欢迎：全栈型算法工程师全栈型的算法工程师在大模型时代尤其受到青睐。这类工程师需要精通大模型从训练到应用的整个流程，包括数据处理、预训练、微调、对齐、推理、应用等方面。数据处理能力在大模型时代，数据的质量和数量直接影响模型的效果。因此，具备强大的数据处理能力，包括数据爬取、数据构造、数据清洗等，是非常重要的。预训练经验在大模型时代，能够进行预训练的算法工程师非常稀缺。这部分工程师需要处理大规模的数据集，并在多台机器间进行通信，解决训练过程中的各种问题。领域知识和应用场景算法工程师需要深入了解所在领域的知识，将算法与实际应用场景相结合，以解决实际问题。持续学习和更新知识随着大模型的发展，相关的岗位需求也在增加。算法工程师需要具备扎实的数学和计算机科学基础，同时需要不断学习和更新知识，以便跟上技术的发展。总的来说，大模型时代的算法工程师需要具备全面的技术能力，包括数据处理、预训练、领域知识等，并且需要不断学习和更新知识，以适应快速发展的技术环境。",
        "voteup_count": 1,
        "updated_time": "2024-04-30 08:52:25",
        "question_id": 652499873,
        "user_id": "1462285eeb98945752aff3a17f133711"
    },
    {
        "answer_id": 3473596843,
        "content": "在大模型时代，以下类型的算法工程师可能更受市场青睐：1. **深度学习与大模型专家**：   - 对大规模预训练模型（如GPT、BERT、T5、Transformer等）的架构、训练原理和应用有深入理解，能够针对特定任务对模型进行微调、优化或创新设计。   - 熟悉模型压缩、量化、蒸馏等技术，能在资源受限的场景下部署和运行大模型。2. **分布式计算与高性能优化工程师**：   - 具备大规模分布式系统的开发经验，能够设计和实现高效的分布式训练、推理方案，对异步计算、模型并行、数据并行等技术有实战经验。   - 熟悉GPU、TPU等加速硬件，能够编写高效CUDA或ROCm代码，优化模型性能。3. **AI伦理与可解释性专家**：   - 对AI伦理原则有深刻认识，能评估模型的公平性、隐私保护、安全性等问题，设计和实施相应的合规解决方案。   - 掌握可解释性技术，如SHAP、LIME、Attention机制解读等，能为复杂模型生成易于理解的解释，增加模型透明度和用户信任。4. **MLOps工程师**：   - 精通模型生命周期管理，包括模型训练、版本控制、自动化测试、部署、监控、迭代等全流程。   - 能够构建和维护CI/CD管道，整合AI工具链，实现AI项目的敏捷开发与运维。5. **领域知识与业务理解能力强的算法工程师**：   - 除了技术能力外，还具备特定行业或领域的专业知识，能将大模型技术与实际业务紧密结合，解决具体问题。   - 能够快速理解和适应新的业务场景，设计出针对性强、效果显著的AI解决方案。6. **跨学科复合型人才**：   - 具备计算机科学、数学、统计学、经济学、心理学等多学科背景，能够跨界解决问题，创新性地应用大模型技术。   - 能够与跨职能团队有效沟通，推动AI项目在组织内部的落地与价值实现。大模型时代更看重算法工程师在大规模模型应用、分布式计算、AI伦理与可解释性、MLOps实践、领域知识深度以及跨学科能力等方面的综合素质。具备这些特点的工程师不仅能够应对技术挑战，更能适应快速变化的市场需求，为企业创造实际价值，因此更有可能在职场中“吃香”。",
        "voteup_count": 0,
        "updated_time": "2024-04-21 16:03:31",
        "question_id": 652499873,
        "user_id": "abe1253e5a501d96c5246a3dae743cba"
    }
]